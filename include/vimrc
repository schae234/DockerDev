autocmd Filetype php set makeprg=php\ -l\ %\ $*
autocmd Filetype perl set makeprg=perl\ -c\ %\ $*

vmap <tab> >gv
vmap <s-PageUp> <gv
nmap <tab> I<tab><esc>
nmap <s-PageUp> ^i<bs><esc>


" For some reason home and end keys are not mapping properly.
" " Home key
"imap OH 0i
"cmap OH 
"nmap OH 0
" " End key
"nmap OF $
"imap OF $a
"cmap OF 

set wrap !
syn on
set mouse=a
set tabstop=4
set shiftwidth=4
set expandtab

:map #2 :set number!

" tab navigation like firefox
:nmap <M-PageUp> :tabprevious<CR>
:nmap <M-PageDown> :tabnext<CR>
:map <M-PageUp> :tabprevious<CR>
:map <M-PageDown> :tabnext<CR>
:imap <M-PageUp> <Esc>:tabprevious<CR>i
:imap <M-PageDown> <Esc>:tabnext<CR>i

cabbr wp call Wp()
fun! Wp()
  set lbr
  set guifont=Consolas:h14
  nnoremap <Up> g<Up>
  nnoremap <Down> g<Down>
  set nonumber
  set spell spelllang=en_us
endfu

" #################################
" Suggested Python stuff from Web
" #################################

" vimrc file for following the coding standards specified in PEP 7 & 8.
"
" To use this file, source it in your own personal .vimrc file (``source
" <filename>``) or, if you don't have a .vimrc file, you can just symlink to it
" (``ln -s <this file> ~/.vimrc``).  All options are protected by autocmds
" (read below for an explanation of the command) so blind sourcing of this file
" is safe and will not affect your settings for non-Python or non-C files.
"
"
" All setting are protected by 'au' ('autocmd') statements.  Only files ending
" in .py or .pyw will trigger the Python settings while files ending in *.c or
" *.h will trigger the C settings.  This makes the file "safe" in terms of only
" adjusting settings for Python and C files.
"
" Only basic settings needed to enforce the style guidelines are set.
" Some suggested options are listed but commented out at the end of this file.

" Number of spaces that a pre-existing tab is equal to.
" For the amount of space used for a new tab use shiftwidth.
au BufRead,BufNewFile *py,*pyw set tabstop=4

" What to use for an indent.
" This will affect Ctrl-T and 'autoindent'.
" Python: 4 spaces
" C: tabs (pre-existing files) or 4 spaces (new files)
au BufRead,BufNewFile *.py,*pyw set shiftwidth=4
au BufRead,BufNewFile *.py,*.pyw set expandtab

" Wrap text after a certain number of characters
" Python: 79 
au BufRead,BufNewFile *.py,*.pyw

" Use UNIX (\n) line endings.
" Only used for new files so as to not force existing files to change their
" line endings.
" Python: yes
" C: yes
au BufNewFile *.py,*.pyw set fileformat=unix


" ----------------------------------------------------------------------------
" The following section contains suggested settings.  While in no way required
" to meet coding standards, they are helpful.

" Set the default file encoding to UTF-8: ``set encoding=utf-8``

" Puts a marker at the beginning of the file to differentiate between UTF and
" UCS encoding (WARNING: can trick shells into thinking a text file is actually
" a binary file when executing the text file): ``set bomb``

" For full syntax highlighting:
"``let python_highlight_all=1``
"``syntax on``

" Automatically indent based on file type: ``filetype indent on``
" Keep indentation level from previous line: ``set autoindent``

" Folding based on indentation: ``set foldmethod=indent``


execute pathogen#infect()
syntax on
filetype plugin indent on

set colorcolumn=80
set term=xterm

" Dont indent when you hit colon in python
autocmd FileType python setlocal indentkeys-=<:>
autocmd FileType python setlocal indentkeys-=:
